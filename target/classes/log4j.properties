
log4j.appender.F.DatePattern = '.'yyyy-MM-dd
log4j.appender.F.MaxFileSize=100000KB 
log4j.appender.F.MaxBackupIndex=1
log4j.appender.F.File=./logs/wire.log
log4j.appender.F.Append= true 
log4j.appender.F.layout=org.apache.log4j.PatternLayout
log4j.appender.F.layout.ConversionPattern =%5p [%c] %m%n

log4j.logger.org.apache.http=INFO, F
log4j.logger.org.apache.http.wire=ERROR, F
log4j.logger.org.apache.http.impl.conn=ERROR, F

# 定义 DEBUG 优先级， R 为日志输出目的的 
log4j.rootLogger= DEBUG , R
log4j.appender.A1=org.apache.log4j.ConsoleAppender 
log4j.appender.A1.layout=org.apache.log4j.PatternLayout 
log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n 

## 设置日志输出类型 , 为文件类型 ,每天产生一个日志文件
#log4j.appender.R= org.apache.log4j.DailyRollingFileAppender

# 文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.R.DatePattern = '.'yyyy-MM-dd
log4j.appender.R.MaxFileSize=20000KB 
log4j.appender.R.MaxBackupIndex=20

# 设置日志文件名 logRecord.log
log4j.appender.R.file= ./logs/svr.log 

# 每次在文件尾写入新的日志信息 
log4j.appender.R.Append= true 

# 日志输出信息格式类型 
log4j.appender.R.layout= org.apache.log4j.PatternLayout 

# 日志输出信息格式为 换行、日期、优先级、 [ 全类名 ] 、日志信息、换行 
log4j.appender.R.layout.ConversionPattern= %n%d %p [%l] %m%n 

log4j.logger.org.redisson.connection.MasterSlaveConnectionManager=INFO, R
log4j.logger.org.redisson.connection.ClusterConnectionManager=INFO, R
log4j.logger.org.redisson.connection.SentinelConnectionManager=INFO, R

log4j.logger.io.netty.buffer.ByteBufUtil=INFO, R
log4j.logger.io.netty.buffer.PooledByteBufAllocator=INFO, R
log4j.logger.io.netty.channel.MultithreadEventLoopGroup=INFO, R
log4j.logger.io.netty.channel.nio.NioEventLoop=INFO, R
log4j.logger.io.netty.util.Recycler=INFO, R
log4j.logger.io.netty.util.internal.PlatformDependent=INFO, R
log4j.logger.io.netty.util.internal.PlatformDependent0=INFO, R


####MySQL
####Local Test
#driver=com.mysql.jdbc.Driver
#url=jdbc:mysql://localhost:3306/sdk_log?useUnicode=true&characterEncoding=utf8&
#user=root
#password=123456
#
##DBCP
#initialSize=1
#maxIdle=2
#minIdle=1
#maxTotal=3
#maxWait=6000
#
##log4j.appender.DBLog.driver=com.mysql.jdbc.Driver
##log4j.appender.DBLog.URL=jdbc:mysql://localhost:3306/sdk_log?useUnicode=true&characterEncoding=UTF-8
##log4j.appender.DBLog.user=root
##log4j.appender.DBLog.password=123456
#log4j.appender.DBLog.BufferSize=10 
#log4j.appender.DBLog.sql=insert into `log_common` (`host`, `port`, `module`, `create_time`, `log_level`, `class`, `method`, `msg`) VALUES (?, ?, ?, '%d{yyyy-MM-dd hh:mm:ss,SSS}', '%p', '%F:%L', '%C.%M', ?);
#log4j.appender.DBLog.layout=org.apache.log4j.PatternLayout

#! Log all JDBC calls except for ResultSet calls
#log4j.logger.jdbc.audit=DEBUG,jdbc
#log4j.additivity.jdbc.audit=false
#
#! Log only JDBC calls to ResultSet objects
#log4j.logger.jdbc.resultset=DEBUG,jdbc
#log4j.additivity.jdbc.resultset=false
#
#! Log only the SQL that is executed.
#log4j.logger.jdbc.sqlonly=DEBUG,sql
#log4j.additivity.jdbc.sqlonly=false

#! Log timing information about the SQL that is executed.
#log4j.logger.jdbc.sqltiming=DEBUG,sqltiming
#log4j.additivity.jdbc.sqltiming=false

#! Log connection open/close events and connection number dump
#log4j.logger.jdbc.connection=FATAL,connection
#log4j.additivity.jdbc.connection=false


#! the appender used for the JDBC API layer call logging above, sql only
#log4j.appender.sql=org.apache.log4j.FileAppender
#log4j.appender.sql.File=./logs/sql.log
#log4j.appender.sql.Append=false
#log4j.appender.sql.layout=org.apache.log4j.PatternLayout
#log4j.appender.sql.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n

#! the appender used for the JDBC API layer call logging above, sql timing
#log4j.appender.sqltiming=org.apache.log4j.FileAppender
#log4j.appender.sqltiming.File=./logs/sqltiming.log
#log4j.appender.sqltiming.Append=false
#log4j.appender.sqltiming.layout=org.apache.log4j.PatternLayout
#log4j.appender.sqltiming.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n

#! the appender used for the JDBC API layer call logging above
#log4j.appender.jdbc=org.apache.log4j.FileAppender
#log4j.appender.jdbc.File=./logs/jdbc.log
#log4j.appender.jdbc.Append=false
#log4j.appender.jdbc.layout=org.apache.log4j.PatternLayout
#log4j.appender.jdbc.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n

#! the appender used for the JDBC Connection open and close events
#log4j.appender.connection=org.apache.log4j.FileAppender
#log4j.appender.connection.File=./logs/connection.log
#log4j.appender.connection.Append=false
#log4j.appender.connection.layout=org.apache.log4j.PatternLayout
#log4j.appender.connection.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
#
#
